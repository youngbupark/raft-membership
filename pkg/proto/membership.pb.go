// Code generated by protoc-gen-go. DO NOT EDIT.
// source: membership.proto

package membership

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WatchRequest struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchRequest) Reset()         { *m = WatchRequest{} }
func (m *WatchRequest) String() string { return proto.CompactTextString(m) }
func (*WatchRequest) ProtoMessage()    {}
func (*WatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_949fe0d019050ef5, []int{0}
}

func (m *WatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchRequest.Unmarshal(m, b)
}
func (m *WatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchRequest.Marshal(b, m, deterministic)
}
func (m *WatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchRequest.Merge(m, src)
}
func (m *WatchRequest) XXX_Size() int {
	return xxx_messageInfo_WatchRequest.Size(m)
}
func (m *WatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchRequest proto.InternalMessageInfo

func (m *WatchRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *WatchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type WatchResponse struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchResponse) Reset()         { *m = WatchResponse{} }
func (m *WatchResponse) String() string { return proto.CompactTextString(m) }
func (*WatchResponse) ProtoMessage()    {}
func (*WatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_949fe0d019050ef5, []int{1}
}

func (m *WatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchResponse.Unmarshal(m, b)
}
func (m *WatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchResponse.Marshal(b, m, deterministic)
}
func (m *WatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchResponse.Merge(m, src)
}
func (m *WatchResponse) XXX_Size() int {
	return xxx_messageInfo_WatchResponse.Size(m)
}
func (m *WatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchResponse proto.InternalMessageInfo

func (m *WatchResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*WatchRequest)(nil), "membership.WatchRequest")
	proto.RegisterType((*WatchResponse)(nil), "membership.WatchResponse")
}

func init() { proto.RegisterFile("membership.proto", fileDescriptor_949fe0d019050ef5) }

var fileDescriptor_949fe0d019050ef5 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0x4d, 0xcd, 0x4d,
	0x4a, 0x2d, 0x2a, 0xce, 0xc8, 0x2c, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88,
	0x28, 0xd9, 0x70, 0xf1, 0x84, 0x27, 0x96, 0x24, 0x67, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97,
	0x08, 0x49, 0x70, 0xb1, 0x97, 0xa5, 0x16, 0x15, 0x67, 0xe6, 0xe7, 0x49, 0x30, 0x2a, 0x30, 0x6a,
	0x70, 0x06, 0xc1, 0xb8, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x4c, 0x60, 0x61,
	0x30, 0x5b, 0x49, 0x99, 0x8b, 0x17, 0xaa, 0xbb, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x15, 0xa4, 0x28,
	0x25, 0xb1, 0x24, 0x11, 0xaa, 0x17, 0xcc, 0x36, 0x0a, 0xe2, 0xe2, 0x0b, 0x4a, 0x4c, 0x2b, 0xf1,
	0x05, 0x5b, 0x1a, 0x9c, 0x91, 0x59, 0x20, 0xe4, 0xc0, 0xc5, 0x0a, 0xd6, 0x26, 0x24, 0xa1, 0x87,
	0xe4, 0x38, 0x64, 0x77, 0x48, 0x49, 0x62, 0x91, 0x81, 0xd8, 0xa1, 0xc1, 0x68, 0xc0, 0x98, 0xc4,
	0x06, 0xf6, 0x89, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x66, 0x39, 0xdb, 0x4f, 0xdd, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RaftMemberShipClient is the client API for RaftMemberShip service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftMemberShipClient interface {
	Watch(ctx context.Context, opts ...grpc.CallOption) (RaftMemberShip_WatchClient, error)
}

type raftMemberShipClient struct {
	cc *grpc.ClientConn
}

func NewRaftMemberShipClient(cc *grpc.ClientConn) RaftMemberShipClient {
	return &raftMemberShipClient{cc}
}

func (c *raftMemberShipClient) Watch(ctx context.Context, opts ...grpc.CallOption) (RaftMemberShip_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RaftMemberShip_serviceDesc.Streams[0], "/membership.RaftMemberShip/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &raftMemberShipWatchClient{stream}
	return x, nil
}

type RaftMemberShip_WatchClient interface {
	Send(*WatchRequest) error
	Recv() (*WatchResponse, error)
	grpc.ClientStream
}

type raftMemberShipWatchClient struct {
	grpc.ClientStream
}

func (x *raftMemberShipWatchClient) Send(m *WatchRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *raftMemberShipWatchClient) Recv() (*WatchResponse, error) {
	m := new(WatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RaftMemberShipServer is the server API for RaftMemberShip service.
type RaftMemberShipServer interface {
	Watch(RaftMemberShip_WatchServer) error
}

// UnimplementedRaftMemberShipServer can be embedded to have forward compatible implementations.
type UnimplementedRaftMemberShipServer struct {
}

func (*UnimplementedRaftMemberShipServer) Watch(srv RaftMemberShip_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}

func RegisterRaftMemberShipServer(s *grpc.Server, srv RaftMemberShipServer) {
	s.RegisterService(&_RaftMemberShip_serviceDesc, srv)
}

func _RaftMemberShip_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RaftMemberShipServer).Watch(&raftMemberShipWatchServer{stream})
}

type RaftMemberShip_WatchServer interface {
	Send(*WatchResponse) error
	Recv() (*WatchRequest, error)
	grpc.ServerStream
}

type raftMemberShipWatchServer struct {
	grpc.ServerStream
}

func (x *raftMemberShipWatchServer) Send(m *WatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *raftMemberShipWatchServer) Recv() (*WatchRequest, error) {
	m := new(WatchRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RaftMemberShip_serviceDesc = grpc.ServiceDesc{
	ServiceName: "membership.RaftMemberShip",
	HandlerType: (*RaftMemberShipServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _RaftMemberShip_Watch_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "membership.proto",
}
